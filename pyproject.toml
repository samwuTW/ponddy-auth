[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.pytest.ini_options]
addopts = "--tb=short -p no:warnings --cov=ponddy_auth --cov-context=test"
python_files = [
  "tests.py",
  "test_*.py",
  "*_tests.py",
]
DJANGO_SETTINGS_MODULE = "core.settings"


[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if __name__ == .__main__.:",
  "nocov",
  "if TYPE_CHECKING:",
]

[tool.coverage.run]
branch = true
omit = [
  "venv",
  "*/migrations/*.py",
]


[tool.black]
line-length = 100
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.devspace
  | \.venv
  | \.vscode
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = 
  {py36,py37}-django22,
  {py36,py37,py38,py39}-django31,
  {py36,py37,py38,py39}-django32,
  {py38,py39}-latest,
  lint,

[testenv]
setenv = CIRCLE_TAG = 0.0.1

deps =
  django22: django~=2.2.0
  django31: django~=3.1.0
  django32: django~=3.2.0
  !latest: djangorestframework~=3.12.0
  -rrequirements/test-ci.txt
commands = pytest tests


[testenv:lint]
commands = 
  flake8 src
  black --check src
  isort -c src
  pydocstyle src
deps = 
  flake8
  isort
  black
  pydocstyle
"""
